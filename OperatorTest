import java.io.*
import java.math.*
import java.security.*
import java.text.*
import java.util.*
import java.util.concurrent.*
import java.util.function.*
import java.util.regex.*
import java.util.stream.*
import kotlin.collections.*
import kotlin.comparisons.*
import kotlin.io.*
import kotlin.jvm.*
import kotlin.jvm.functions.*
import kotlin.jvm.internal.*
import kotlin.ranges.*
import kotlin.sequences.*
import kotlin.text.*
import kotlin.math.*

// Complete the solve function below.
fun solve(meal_cost: Double, tip_percent: Int, tax_percent:Int): Unit {
    //val meal_payment= meal_cost.roundToInt()
    //val tip_percent_pay = ((tip_percent/100.0) * meal_payment)
    var tippercentpay = ((tip_percent/100) * meal_cost)
    //val tip_payable = tip_percent_pay.toInt()
    //val tax_percent_payable = ((tax_percent/100) * meal_payment)
    var taxpercentpayable = ((tax_percent/100) * meal_cost)
    //val tax_payable = tax_percent_payable.toInt()
    val totalpayment = (meal_cost + tippercentpay + taxpercentpayable)
    //var totalpayment = (meal_payment + tippercentpay + taxpercentpayable)
//Math.ceil(total_payment)
    val y = totalpayment.roundToInt()
//val y= Math.ceil(totalpayment).toInt()
//val y= Math.ceil(totalpayment)
    print ("$y")
}

fun main(args: Array<String>) {
    val scan = Scanner(System.`in`)

    //val meal_cost = scan.nextLine().trim().toDouble()
    var mealcost: Double = readLine()!!.toDouble()
    //val tip_percent = scan.nextLine().trim().toInt()
    var tippercent: Int = readLine()!!.toInt()
    //val tax_percent = scan.nextLine().trim().toInt()
    var taxpercent: Int = readLine()!!.toInt()
    solve(mealcost, tippercent, taxpercent)
}
